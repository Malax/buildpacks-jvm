name: Release Buildpack
on:
  workflow_dispatch:

jobs:
  determinebuildpacks:
    runs-on: ubuntu-latest
    outputs:
      buildpack_dirs: ${{ steps.stepid.outputs.buildpack_dirs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: stepid
        name: ASD
        run: |
          buildpack_dirs_json_array=$(find . \( -name "Cargo.toml" -o -name "buildpack.toml" \) -type f -exec dirname "{}" \; | uniq -d | jq -R -s -c 'split("\n")[:-1]')
          echo "buildpack_dirs=${buildpack_dirs_json_array}" >> $GITHUB_OUTPUT
  release-lint:
    runs-on: ubuntu-latest
    needs: determinebuildpacks
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: buildpacks/github-actions/setup-pack@v4.1.0
      - name: ASD
        env:
          BUILDPACK_DIRS_JSON: ${{ needs.determinebuildpacks.outputs.buildpack_dirs }}
        run: |
          eval "buildpack_dirs=($(echo "${BUILDPACK_DIRS_JSON}" | jq -r '.[] | @sh'))"
          for buildpack_dir in $buildpack_dirs; do
            echo "${buildpack_dir}"
          done
  build-and-package:
    name: "Build and Package: ${{ matrix.buildpack_dir }}"
    runs-on: ubuntu-latest
    needs: [determinebuildpacks, release-lint]
    strategy:
      matrix:
        buildpack_dir: ${{ fromJson(needs.determinebuildpacks.outputs.buildpack_dirs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install musl-tools
        run: sudo apt-get install musl-tools --no-install-recommends
      - name: Update Rust toolchain
        run: rustup update
      - name: Install Rust linux-musl target
        run: rustup target add x86_64-unknown-linux-musl
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Install Pack CLI
        uses: buildpacks/github-actions/setup-pack@v4.9.0
      - name: Install libcnb-cargo
        run: cargo install libcnb-cargo
      - name: ASD
        working-directory: ${{ matrix.buildpack_dir }}
        run: |
          cargo libcnb package --release
  upload:
    runs-on: ubuntu-latest
    needs: build-and-package
    steps:
      - run: echo "OHAI"
